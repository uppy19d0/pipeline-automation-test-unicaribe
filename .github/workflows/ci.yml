name: CI/CD - Comprehensive Pipeline

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format -- --check

  test:
    runs-on: ubuntu-latest
    needs: lint-and-format
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage + JUnit
        run: npm test

      - name: Publish test results (JUnit) to Checks
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Unit Tests (Jest)
          path: reports/junit/junit.xml
          reporter: jest-junit
          fail-on-error: false

      - name: Upload artifacts (reports + coverage)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-node-${{ matrix.node-version }}
          path: |
            reports/**
            coverage/**
            junit*.xml
          if-no-files-found: warn
          retention-days: 7

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ci-simple-node-project:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run -d --name test-container -p 3000:3000 ci-simple-node-project:latest
          sleep 10
          curl -f http://localhost:3000/health || exit 1
          docker stop test-container
